service: import-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action: 's3:ListBucket'
          Resource: 'arn:aws:s3:::aws-task-csv-bucket'
        - Effect: 'Allow'
          Action: 's3:*'
          Resource: 'arn:aws:s3:::aws-task-csv-bucket/*'
        - Effect: 'Allow'
          Action: 'sqs:*'
          Resource:
            - Fn::GetAtt: [SQSQueue, Arn]
        - Effect: 'Allow'
          Action: 'sns:*'
          Resource:
            Ref: SNSTopic

  environment:
    host: console-created-instance.c0hjjbisikru.eu-west-1.rds.amazonaws.com
    port: 5432
    database: console_db
    user: postgres
    password: JUNXjOHlOItsXOmtBH5X
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: yan.test.aws@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-task-csv-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
